name: Build Android

# Controls when the workflow will run
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      
      - name: Add .npmrc file
        run: echo -e $NPMRC > ~/.npmrc
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
  
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install app dependencies
        run: npm install

      - name: Prepare app for build
        run: ionic capacitor sync android --prod

      ## cache to reduce future builds
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: | 
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        working-directory: ./android
        run: chmod +x ./gradlew

      - uses: sparkfabrik/android-build-action@v1.4.0
        with:
          build-type: "assemble"
          gradle-task: "assembleDebug"
          increment-build-number: false
          # package-name: "com.example.app"
          # keystore-content: "keystore file content as base64 encoded string"
          # keystore-password: "keystore password"
          # key-alias: "keystore alias"
          # json-key-data: "JSON keystore file content"
          upload-to-play-store: false
          project-path: './android/'
          output-path: $RUNNER_TEMP/wfnews-dev-${{ github.sha }}.apk
          fastlane-env: "debug"
          ruby-version: "head"
          bundler-version: "2.3"
          release-track: "internal"
          release-status: "draft"

      - uses: actions/upload-artifact@v3
        with:
          name: wfnews-dev-${{ github.sha }}.apk
          path: '$RUNNER_TEMP/wfnews-dev-${{ github.sha }}.apk'
          retention-days: 3
  
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
          channel-id: 'wildfire-build-notifier'
          slack-message: "Android build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}